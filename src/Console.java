
import com.benny.utilities.util;
import com.qcloud.Utilities.Json.*;
import java.awt.Toolkit;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Benny~
 */
public class Console extends javax.swing.JFrame {
    //set var
    private String cName,cDiskID,cInstanceID,cRegion; 
    private JSONObject json=new JSONObject();
    private Map cAuth=new HashMap();
    private final util rebuild=new util();
        /**
     * Creates new form Console
     */
    public Console() {
        initComponents();
        setLocationRelativeTo(null);
        hostStatus.setRowHeight(40);
        snapshotList.setRowHeight(40);
        reboot.setVisible(false);
        power.setVisible(false);

        
        //
    }
    
   
    //ser var fun
    /**
     * 设置成员变量给Console
     * @param s
     *          服务器名字
     * @param id
     *          secretID
     * @param key 
     *          secretKey
     */
    public void setVar(String s,String id,String key){
    cAuth.put("secretId", id);
    cAuth.put("secretKey", key);
    cName=s;
    hostTab.setTitleAt(0, cName);
    this.setTitle("控制台 - "+cName+"");
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        hostTab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        hostSet = new javax.swing.JTabbedPane();
        instance = new javax.swing.JPanel();
        gz = new javax.swing.JRadioButton();
        sh = new javax.swing.JRadioButton();
        bj = new javax.swing.JRadioButton();
        hk = new javax.swing.JRadioButton();
        sg = new javax.swing.JRadioButton();
        ca = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        hostStatus = new javax.swing.JTable();
        reboot = new javax.swing.JButton();
        power = new javax.swing.JButton();
        snapshot = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        snapshotList = new javax.swing.JTable();
        create = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/com/benny/images/ico.png")));

        hostTab.setToolTipText("");

        hostSet.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        hostSet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hostSetMouseClicked(evt);
            }
        });

        buttonGroup1.add(gz);
        gz.setText("广州");
        gz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gzMouseClicked(evt);
            }
        });

        buttonGroup1.add(sh);
        sh.setText("上海");
        sh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shMouseClicked(evt);
            }
        });

        buttonGroup1.add(bj);
        bj.setText("北京");
        bj.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bjMouseClicked(evt);
            }
        });

        buttonGroup1.add(hk);
        hk.setText("香港");
        hk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hkMouseClicked(evt);
            }
        });

        buttonGroup1.add(sg);
        sg.setText("新加坡");
        sg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sgMouseClicked(evt);
            }
        });

        buttonGroup1.add(ca);
        ca.setText("北美");
        ca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                caMouseClicked(evt);
            }
        });

        hostStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "实例ID/主机名", "状态", "操作系统", "配置", "磁盘类型", "IP地址", "到期日期"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        hostStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hostStatusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(hostStatus);

        reboot.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/benny/images/reboot.png"))); // NOI18N
        reboot.setToolTipText("重启");
        reboot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rebootMouseClicked(evt);
            }
        });

        power.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                powerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout instanceLayout = new javax.swing.GroupLayout(instance);
        instance.setLayout(instanceLayout);
        instanceLayout.setHorizontalGroup(
            instanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instanceLayout.createSequentialGroup()
                .addGroup(instanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(instanceLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(gz)
                        .addGap(10, 10, 10)
                        .addComponent(sh)
                        .addGap(18, 18, 18)
                        .addComponent(bj)
                        .addGap(18, 18, 18)
                        .addComponent(hk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sg)
                        .addGap(10, 10, 10)
                        .addComponent(ca))
                    .addGroup(instanceLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(instanceLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(182, 182, 182)
                        .addComponent(reboot, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        instanceLayout.setVerticalGroup(
            instanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instanceLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(instanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gz)
                    .addComponent(sh)
                    .addComponent(bj)
                    .addComponent(hk)
                    .addComponent(sg)
                    .addComponent(ca))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184)
                .addGroup(instanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(power, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reboot, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(150, Short.MAX_VALUE))
        );

        hostSet.addTab("实例", instance);

        snapshotList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "名称", "状态", "创建百分比", "创建时间"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(snapshotList);

        create.setToolTipText("创建快照");

        delete.setToolTipText("删除快照");

        jButton1.setToolTipText("回滚快照");

        javax.swing.GroupLayout snapshotLayout = new javax.swing.GroupLayout(snapshot);
        snapshot.setLayout(snapshotLayout);
        snapshotLayout.setHorizontalGroup(
            snapshotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(snapshotLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
            .addGroup(snapshotLayout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(create, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(354, 354, 354))
        );
        snapshotLayout.setVerticalGroup(
            snapshotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(snapshotLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116)
                .addGroup(snapshotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(create, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(186, Short.MAX_VALUE))
        );

        hostSet.addTab("快照", snapshot);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hostSet)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hostSet)
        );

        hostTab.addTab("服务器名称", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(hostTab, javax.swing.GroupLayout.PREFERRED_SIZE, 1069, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(hostTab, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 
     * @param json
     *              接受json参数
     * @param loc 
     *              行数
     */
    private void setHostStatus(JSONObject json,int loc){
   
    //这里要顺路取得对应的磁盘id，存储起来。
    ///////得到了查询的结果，然后再次调用util的方法getIV      
        //util rebuild = new util();
        //System.out.println("debug here "+trueValue.getIV(json, loc, "cpu"));
        //处理json，及时return
        //System.out.println("数量为0就return"+json.get("totalCount"));
        
        if("0".equals(json.get("totalCount").toString()))
        {JOptionPane.showMessageDialog(rootPane, "在 *"+cRegion+"* 未查询到服务器", "提示", JOptionPane.INFORMATION_MESSAGE);
        return;}
        else
            System.out.println("至少不会抛异常了");
        
        hostStatus.setValueAt(rebuild.getIV(json, loc, "unInstanceId")+" "+rebuild.getIV(json, loc, "instanceName"), loc, 0);
        hostStatus.setValueAt(rebuild.getIV(json, loc, "status"), loc, 1);
        hostStatus.setValueAt(rebuild.getIV(json, loc, "os"), loc, 2);
        hostStatus.setValueAt(rebuild.getIV(json, loc, "cpu") + "核 "
                              + rebuild.getIV(json, loc, "mem")+ "G "
                              + rebuild.getIV(json, loc, "bandwidth")+ "Mbps ", loc, 3);
        hostStatus.setValueAt(rebuild.getIV(json, loc, "diskInfo"), loc, 4);
        hostStatus.setValueAt(rebuild.getIV(json, loc, "wanIpSet").replace('[', ' ').replace(']', ' ').replace('"', ' ').trim(), 
            loc, 5);
        hostStatus.setValueAt(rebuild.getIV(json, loc, "deadlineTime"), loc, 6);

    }
    /**
     * 
     * @param action 
     *              要进行的操作名，i.e. DescribeInstances
     */
    private void actOnOrder(String action){
             String rg = null;
            if (gz.isSelected()) 
                rg = "gz";           
            if (sh.isSelected()) 
                rg = "sh";            
            if (bj.isSelected()) 
                rg = "bj";          
            if (hk.isSelected()) 
                rg = "hk";          
            if (sg.isSelected()) 
                rg = "sg";          
            if (ca.isSelected()) 
                rg = "ca";        
            cInstanceID = hostStatus.getValueAt(hostStatus.getSelectedRow(), 0).toString().substring(0, 12);
            rebuild.doInstance(cAuth, rg, cInstanceID,action); //传递action  
            JOptionPane.showMessageDialog(rootPane, "指令已发出", "提示", JOptionPane.INFORMATION_MESSAGE);
            //设置其他按钮为不可用
            reboot.setEnabled(false);power.setEnabled(false);////end
        
    }
    
    private void bjMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bjMouseClicked
        // TODO add your handling code here:   
        //目前只能处理一个(未使用循环）
        //考虑代码重用    cRegion 北京      
        rebuild.doInstance(cAuth, bj.getText(),null, "DescribeInstances");        
        json=rebuild.json_result;
        cRegion="北京";
        setHostStatus(json,0);
        
    }//GEN-LAST:event_bjMouseClicked

    private void shMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shMouseClicked
        // TODO add your handling code here:       
        rebuild.doInstance(cAuth, sh.getText(), null, "DescribeInstances");        
        json=rebuild.json_result;
        cRegion="上海";
        setHostStatus(json,0);
    }//GEN-LAST:event_shMouseClicked

    private void gzMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gzMouseClicked
        // TODO add your handling code here:
        rebuild.doInstance(cAuth, gz.getText(), null, "DescribeInstances");        
        json=rebuild.json_result;
        cRegion="广州";
        setHostStatus(json,0);
    }//GEN-LAST:event_gzMouseClicked

    private void hkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hkMouseClicked
        // TODO add your handling code here:
        rebuild.doInstance(cAuth, hk.getText(), null, "DescribeInstances");        
        json=rebuild.json_result;
        cRegion="香港";
        setHostStatus(json,0);
    }//GEN-LAST:event_hkMouseClicked

    private void sgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sgMouseClicked
        // TODO add your handling code here:
        rebuild.doInstance(cAuth, sg.getText(), null, "DescribeInstances");        
        json=rebuild.json_result;
        cRegion="新加坡";
        setHostStatus(json,0);
    }//GEN-LAST:event_sgMouseClicked

    private void caMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caMouseClicked
        // TODO add your handling code here:
        rebuild.doInstance(cAuth, ca.getText(), null, "DescribeInstances");        
        json=rebuild.json_result;
        cRegion="北美";
        setHostStatus(json,0);
    }//GEN-LAST:event_caMouseClicked

    private void rebootMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rebootMouseClicked
        // TODO add your handling code here:
        //如果未选中，结果是-1；否则是0,1,2,3,4...
        if(hostStatus.getSelectedRow()==-1)
        {
            JOptionPane.showMessageDialog(rootPane, "未选择服务器", "提示", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int op=JOptionPane.showConfirmDialog(rootPane, "确定要重启吗", "提示", JOptionPane.YES_NO_OPTION);
        //点是返回0，否返回1，有悖常理啊      
        if(op==0)
           actOnOrder("RestartInstances");
        else
            JOptionPane.showMessageDialog(rootPane, "操作已取消", "提示", JOptionPane.INFORMATION_MESSAGE);
        /////////over
        
    }//GEN-LAST:event_rebootMouseClicked

    private void hostStatusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostStatusMouseClicked
        // TODO add your handling code here:显示三个控制按钮
        //让它犯难
        //hostStatus.setValueAt("蓝瘦香菇", 0, 1);
        if(hostStatus.getValueAt(hostStatus.getSelectedRow(), 0)!=null)
        {reboot.setVisible(true);power.setVisible(true);cDiskID=rebuild.uDiskID;
        //System.out.println("点击表格看diskID,console private "+cDiskID);
        }
        
        if(hostStatus.getValueAt(hostStatus.getSelectedRow(),1)=="运行中")
        { 
        power.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/benny/images/poweroff.png")));
        power.setToolTipText("关机");
        }
        else if(hostStatus.getValueAt(hostStatus.getSelectedRow(),1)=="已关机")
        {
        power.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/benny/images/poweron.png")));
        power.setToolTipText("开机");
        reboot.setVisible(false);
        }
        else
        {
        power.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/benny/images/unknow.png")));
        power.setToolTipText("嗷呜等等吧");
        power.setEnabled(false);
        reboot.setEnabled(false);
        }
    }//GEN-LAST:event_hostStatusMouseClicked

    private void powerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_powerMouseClicked
        // TODO add your handling code here:执行关机或者重启任务
        int op=JOptionPane.showConfirmDialog(rootPane, "确定要"+power.getToolTipText()+"吗", "提示", JOptionPane.OK_OPTION);
        if(power.getToolTipText()=="开机" && op==0)
            actOnOrder("StartInstances");
        else if(power.getToolTipText()=="关机" && op==0)
            actOnOrder("StopInstances");
        else if(power.getToolTipText()=="嗷呜等等吧" && op==0)
            JOptionPane.showMessageDialog(rootPane, "叫你等，你还点，哼", "哼", JOptionPane.WARNING_MESSAGE);
        else
            System.out.println("操作已取消");
        
    }//GEN-LAST:event_powerMouseClicked

    private void hostSetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostSetMouseClicked
        // TODO add your handling code here:获取快照信息.
        
        if(cDiskID==null &&hostSet.getSelectedIndex()==1)
        {JOptionPane.showMessageDialog(rootPane, "未选择主机", "提示", JOptionPane.INFORMATION_MESSAGE);
        hostSet.setSelectedIndex(0);
        return;} 
        else
            System.out.println("点击表格之后获得的diskID"+cDiskID);
        
    }//GEN-LAST:event_hostSetMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Console().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bj;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton ca;
    private javax.swing.JButton create;
    private javax.swing.JButton delete;
    private javax.swing.JRadioButton gz;
    private javax.swing.JRadioButton hk;
    private javax.swing.JTabbedPane hostSet;
    private javax.swing.JTable hostStatus;
    private javax.swing.JTabbedPane hostTab;
    private javax.swing.JPanel instance;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton power;
    private javax.swing.JButton reboot;
    private javax.swing.JRadioButton sg;
    private javax.swing.JRadioButton sh;
    private javax.swing.JPanel snapshot;
    private javax.swing.JTable snapshotList;
    // End of variables declaration//GEN-END:variables
}
